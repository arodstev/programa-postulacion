#include "stdafx.h"
#using <mscorlib.dll>
#using "System.Web.dll"
#using "System.Web.Services.dll"

using namespace System;
using namespace System::Web;
using namespace System::Web::Services;

#include <iostream>
#include <fstream>
#include <jsoncpp/json/json.h>

// Simple struct para serialize/deserialize
struct Collatz
{
       std::string name;
       int num;
};

// Macro that opens/closes conversion namespace
SSVJ_CNV_NAMESPACE()
{
       // Macro that defines a converter for Person
       // 'mV' is the name of the variable that will refer to the JSON value
       // 'mX' is the name of the variable that will refer to the Person value
       SSVJ_CNV(Collatz, mV, mX)
       {
           ssvj::cnvArr(mV, mX.name, mX.num);
       }
       SSVJ_CNV_END()
}
SSVJ_CNV_NAMESPACE_END()
namespace CPPWebService
{
	CreaCollatz MyService::GetNumero(int numero)
	{
              // simple sanity checks
              if (numero < 0 )
                 return 0;
                     
              // Initialize a JSON array
              ssvj::Val collatzJ{ssvj::Arr{}}; 
              
              while (numero > 1)
                {
                 if (numero %2 ==0)
                   {
                    numero = numero / 2;
                   }
                 else
                   {
                    numero = 3 * numero + 1;
                   }
                  iteracion ++
                           
                 // agregar al Json el numero obtenido
                 collatzJ.emplace<Collatz>("Collatz", numero);
                }
                       
              for(const auto& p : collatzJ.forArrAs<Collatz>())
                {
                 std::cout << "Name: " << p.name << "\n"
                           << "Age: " << p.num << "\n\n";
                 }
                
              // Grabamos Write and read from file
              collatzJ.writeToFile("/tmp/collatzJ.json");
	}
};